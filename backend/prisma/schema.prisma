generator client {
  provider = "prisma-client-js"
}

datasource db {
  // For local development we use SQLite. To use Postgres in production,
  // set provider = "postgresql" and provide a DATABASE_URL that starts with
  // postgresql:// or postgres:// in your .env
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String   @unique
  password  String
  role      String   @default("USER")
  avatar    String?
  bio       String?
  level     Int      @default(1)
  xp        Int      @default(0)
  posts     Post[]
  comments  Comment[]
  likes     Like[]
  followers Follow[] @relation("following")
  following Follow[] @relation("follower")
  createdAt DateTime @default(now())
}



model Post {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  content   String?
  image     String?
  likes     Like[]
  comments  Comment[]
  createdAt DateTime @default(now())
}

model Like {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  post   Post?  @relation(fields: [postId], references: [id])
  postId String?
  comment Comment? @relation(fields: [commentId], references: [id])
  commentId String?
  createdAt DateTime @default(now())
}

model Comment {
  id        String @id @default(cuid())
  user      User   @relation(fields: [userId], references: [id])
  userId    String
  post      Post   @relation(fields: [postId], references: [id])
  postId    String
  content   String
  likes     Like[]
  createdAt DateTime @default(now())
}

model Follow {
  id          String @id @default(cuid())
  follower    User   @relation("follower", fields: [followerId], references: [id])
  followerId  String
  following   User   @relation("following", fields: [followingId], references: [id])
  followingId String
  createdAt   DateTime @default(now())
  @@unique([followerId, followingId])
}
